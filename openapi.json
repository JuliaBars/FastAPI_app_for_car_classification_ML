{"openapi": "3.0.2", "info": {"title": "Object Detection FastAPI Template", "description": "Obtain object value out of image\n                    and return image and json result", "version": "2023.1.31"}, "paths": {"/healthcheck": {"get": {"summary": "Perform Healthcheck", "description": "It basically sends a GET request to the route & hopes to get a \"200\"\nresponse code. Failing to return a 200 response code just enables\nthe GitHub Actions to rollback to the last version the project was\nfound in a \"working condition\". It acts as a last line of defense in\ncase something goes south.\nAdditionally, it also returns a JSON response in the form of:\n{\n    'healtcheck': 'Everything OK!'\n}", "operationId": "perform_healthcheck_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/available_models": {"get": {"summary": "Get All Models", "description": "To check the list of cars' models, which are avalable for recognition.", "operationId": "get_all_models_available_models_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/yolo_classes": {"get": {"summary": "Get Yolo Classes", "description": "To check the list of cars' models, which are avalable for recognition.", "operationId": "get_yolo_classes_yolo_classes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/object_detection_with_yolo": {"post": {"summary": "Object Detection With Yolo", "description": "Object Detection from an image plot bbox on image. Using Yolo8.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "object_detection_with_yolo_object_detection_with_yolo_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_object_detection_with_yolo_object_detection_with_yolo_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/car_brand_model_classification": {"post": {"summary": "Car Brand Model Classification", "description": "Object Detection from an image plot bbox on image. Using Yolo8.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "car_brand_model_classification_car_brand_model_classification_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_car_brand_model_classification_car_brand_model_classification_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/car_model_segment_and_crop": {"post": {"summary": "Car Model Segment And Crop", "description": "Object Detection from an image plot bbox on image. Using Yolo8.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "car_model_segment_and_crop_car_model_segment_and_crop_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_car_model_segment_and_crop_car_model_segment_and_crop_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_car_brand_model_classification_car_brand_model_classification_post": {"title": "Body_car_brand_model_classification_car_brand_model_classification_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_car_model_segment_and_crop_car_model_segment_and_crop_post": {"title": "Body_car_model_segment_and_crop_car_model_segment_and_crop_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_object_detection_with_yolo_object_detection_with_yolo_post": {"title": "Body_object_detection_with_yolo_object_detection_with_yolo_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}