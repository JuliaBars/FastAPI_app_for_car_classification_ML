{"openapi": "3.0.2", "info": {"title": "Car models Classification FastAPI", "description": "Obtain object value out of image\n                    and return image with label", "version": "2023.7.16"}, "paths": {"/healthcheck": {"get": {"tags": ["check"], "summary": "Perform Healthcheck", "description": "It basically sends a GET request to the route & hopes to get a \"200\"\nresponse code.", "operationId": "perform_healthcheck_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/available_models": {"get": {"tags": ["classify"], "summary": "Get All Models", "description": "To check the list of cars' models, avalable for recognition.", "operationId": "get_all_models_available_models_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/car_brand_model_classification": {"post": {"tags": ["classify"], "summary": "Car Brand Model Classification", "description": "Object Detection from an image plot bbox on image. Using Yolo8.", "operationId": "car_brand_model_classification_car_brand_model_classification_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_car_brand_model_classification_car_brand_model_classification_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/car_model_segment_and_crop": {"post": {"tags": ["classify"], "summary": "Car Model Segment And Crop", "description": "Object Detection from an image plot bbox on image. Using Yolo8.", "operationId": "car_model_segment_and_crop_car_model_segment_and_crop_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_car_model_segment_and_crop_car_model_segment_and_crop_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/yolo_classes": {"get": {"tags": ["try_yolo8"], "summary": "Get Yolo Classes", "description": "To check the list of cars' models,avalable for recognition.", "operationId": "get_yolo_classes_yolo_classes_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/object_detection_with_yolo": {"post": {"tags": ["try_yolo8"], "summary": "Object Detection With Yolo", "description": "Object Detection from an image plot bbox on image. Using Yolo8.", "operationId": "object_detection_with_yolo_object_detection_with_yolo_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_object_detection_with_yolo_object_detection_with_yolo_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_car_brand_model_classification_car_brand_model_classification_post": {"title": "Body_car_brand_model_classification_car_brand_model_classification_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_car_model_segment_and_crop_car_model_segment_and_crop_post": {"title": "Body_car_model_segment_and_crop_car_model_segment_and_crop_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "Body_object_detection_with_yolo_object_detection_with_yolo_post": {"title": "Body_object_detection_with_yolo_object_detection_with_yolo_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "format": "binary"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}